{"ast":null,"code":"var _jsxFileName = \"/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI } from './constant';\nimport { id } from 'ethers/lib/utils';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auction() {\n  _s();\n  const [title, setTitle] = useState();\n  const [clientAddress, setClientAddress] = useState();\n  const [everyAuction, setEveryAuction] = useState([]);\n  const [auctionId, setAuctionId] = useState();\n  const [loading, setLoading] = useState(false);\n  const [msp, setMsp] = useState(0);\n  const web3ModalRef = useRef();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const getProviderOrSigner = async function () {\n    let needSigner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    // console.log((await userAddress).toLowerCase())\n    const signerForUserAddress = await web3Provider.getSigner();\n    const clientAddress = await signerForUserAddress.getAddress();\n    setClientAddress(clientAddress);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n    if (chainId !== 5) {\n      window.alert(\"Please switch to the Goerli network!\");\n      throw new Error(\"Please switch to the Goerli network\");\n    }\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n    return web3Provider;\n  };\n  // console.log('clientAddress:', clientAddress,); \n  const connectWallet = async () => {\n    try {\n      await getProviderOrSigner();\n      setWalletConnected(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Create Auction --------\n  const createAuction = async () => {\n    // Validate inputs\n    if (clientAddress == null || title == null || msp == null) {\n      alert('Please enter all required fields.');\n      return;\n    }\n    const signer = await getProviderOrSigner(true);\n    // console.log('signer', signer);\n    // alert('after ifff');\n\n    const escroContract = getAuctionContractInstance(signer);\n    console.log('auctionId:', auctionId);\n    console.log('clientAddress:', clientAddress);\n    // Send the transaction to create the escrow agreement\n    const tx = await escroContract.createAuctionContract(clientAddress, {\n      value: ethers.utils.parseEther(msp)\n    });\n    console.log('tx====', tx);\n    setLoading(true);\n    await tx.wait();\n    setAuctionId(id);\n    setMsp(0);\n    // Update the state to reflect the new escrow agreement\n    // setFundsReleased(false);\n\n    // getNumOfAgreements();\n    setLoading(false);\n    alert('Auction  created successfully.');\n    alert('MSP  deposited successfully.');\n  };\n  function ParsedAgreement(agreeId, clientAdd, msp) {\n    this.agreeId = agreeId;\n    this.clientAdd = clientAdd;\n    // this.completed = completed;\n    this.msp = msp;\n    // this.release = released\n  }\n\n  useEffect(() => {\n    if (!walletConnected) {\n      web3ModalRef.current = new Web3Modal({\n        network: \"goerli\",\n        providerOptions: {},\n        disableInjectedProvider: false\n      });\n      connectWallet().then(async () => {\n        \"wallet connected\";\n      });\n    }\n  }, []);\n  const fetchAuctionById = async id => {\n    console.log('erntered fetch by id', id);\n    try {\n      const provider = await getProviderOrSigner();\n      const escroContract = getAuctionContractInstance(provider);\n      let agreement = await escroContract.auctions(id);\n      const agrmnt = new ParsedAgreement(id, agreement.client, agreement.msp.toNumber());\n      console.log(agrmnt, 'agreement by ID');\n      return agrmnt;\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n  // fetchAuctionById();\n\n  const getAuctionContractInstance = providerOrSigner => {\n    return new Contract(AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI, providerOrSigner);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Auction by Di\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Owner : \", clientAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Highest Bid : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \" Title of Auction : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: \" MSP : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => {\n        setMsp(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAuction,\n          children: \"Create Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), fetchAuctionById]\n  }, void 0, true);\n}\n_s(Auction, \"CGqnmx3fcVY5N1Tc8WyfFbicZ3Q=\");\n_c = Auction;\nvar _c;\n$RefreshReg$(_c, \"Auction\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Web3Modal","ethers","Contract","providers","Signer","AUCTION_ESCROW_CONTRACT_ADDRESS","AUCTION_ESCROW_ABI","id","Auction","title","setTitle","clientAddress","setClientAddress","everyAuction","setEveryAuction","auctionId","setAuctionId","loading","setLoading","msp","setMsp","web3ModalRef","walletConnected","setWalletConnected","getProviderOrSigner","needSigner","provider","current","connect","web3Provider","Web3Provider","signerForUserAddress","getSigner","getAddress","chainId","getNetwork","window","alert","Error","signer","connectWallet","error","console","log","createAuction","escroContract","getAuctionContractInstance","tx","createAuctionContract","value","utils","parseEther","wait","ParsedAgreement","agreeId","clientAdd","network","providerOptions","disableInjectedProvider","then","fetchAuctionById","agreement","auctions","agrmnt","client","toNumber","providerOrSigner","e","target"],"sources":["/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI } from './constant';\nimport { id } from 'ethers/lib/utils';\n\n\nexport default function Auction() {\n    const [title, setTitle] = useState();\n    const [clientAddress, setClientAddress] = useState();\n    const [everyAuction, setEveryAuction] = useState([]);\n    const [auctionId, setAuctionId] = useState();\n    const [loading, setLoading] = useState(false)\n    const [msp, setMsp] = useState(0);\n\n\n    const web3ModalRef = useRef();\n\n    const [walletConnected, setWalletConnected] = useState(false);\n    const getProviderOrSigner = async (needSigner = false) => {\n        const provider = await web3ModalRef.current.connect();\n\n        const web3Provider = new providers.Web3Provider(provider);\n        // console.log((await userAddress).toLowerCase())\n        const signerForUserAddress = await web3Provider.getSigner();\n        const clientAddress = await signerForUserAddress.getAddress();\n        setClientAddress(clientAddress);\n        const { chainId } = await web3Provider.getNetwork();\n        if (chainId !== 5) {\n            window.alert(\"Please switch to the Goerli network!\");\n            throw new Error(\"Please switch to the Goerli network\");\n        }\n\n        if (needSigner) {\n            const signer = web3Provider.getSigner();\n            return signer;\n        }\n        return web3Provider;\n    }\n    // console.log('clientAddress:', clientAddress,); \n    const connectWallet = async () => {\n        try {\n            await getProviderOrSigner();\n            setWalletConnected(true);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    // Create Auction --------\n    const createAuction = async () => {\n        // Validate inputs\n        if (clientAddress == null || title == null || msp == null) {\n            alert('Please enter all required fields.');\n            return;\n        }\n\n        const signer = await getProviderOrSigner(true);\n        // console.log('signer', signer);\n        // alert('after ifff');\n\n        const escroContract = getAuctionContractInstance(signer);\n        console.log('auctionId:', auctionId);\n        console.log('clientAddress:', clientAddress);\n        // Send the transaction to create the escrow agreement\n        const tx = await escroContract.createAuctionContract(clientAddress, { value: ethers.utils.parseEther(msp) });\n\n        console.log('tx====', tx);\n        setLoading(true)\n        await tx.wait();\n        setAuctionId(id);\n        setMsp(0)\n        // Update the state to reflect the new escrow agreement\n        // setFundsReleased(false);\n\n        // getNumOfAgreements();\n        setLoading(false);\n        alert('Auction  created successfully.');\n        alert('MSP  deposited successfully.');\n    }\n\n    function ParsedAgreement(agreeId, clientAdd, msp) {\n        this.agreeId = agreeId;\n        this.clientAdd = clientAdd;\n        // this.completed = completed;\n        this.msp = msp;\n        // this.release = released\n    }\n\n    useEffect(() => {\n        if (!walletConnected) {\n            web3ModalRef.current = new Web3Modal({\n                network: \"goerli\",\n                providerOptions: {},\n                disableInjectedProvider: false,\n            });\n            connectWallet().then(async () => {\n                \"wallet connected\"\n            })\n        }\n    }, []);\n\n    const fetchAuctionById = async (id) => {\n        console.log('erntered fetch by id', id);\n\n        try {\n            const provider = await getProviderOrSigner();\n            const escroContract = getAuctionContractInstance(provider);\n            let agreement = await escroContract.auctions(id);\n\n            const agrmnt = new ParsedAgreement(id, agreement.client,\n                agreement.msp.toNumber())\n\n            console.log(agrmnt, 'agreement by ID');\n            return agrmnt;\n\n        } catch (error) {\n            console.log(error);\n        };\n    }\n    // fetchAuctionById();\n\n\n    const getAuctionContractInstance = (providerOrSigner) => {\n        return new Contract(\n            AUCTION_ESCROW_CONTRACT_ADDRESS,\n            AUCTION_ESCROW_ABI,\n            providerOrSigner\n        );\n    };\n    return (\n        <>\n            <div>\n                <h1>\n                    Auction by Di\n                </h1>\n            </div>\n            <div>Owner : {clientAddress}</div>\n            <div>Highest Bid : </div>\n            {/* 1)Create Auction */}\n            <div>\n                <lable> Title of Auction : </lable> <input type=\"text\"\n                    onChange={(e) => { setTitle(e.target.value) }}\n                />\n                {/* {console.log('title', title)} */}\n            </div>\n            <lable> MSP : </lable> <input type=\"number\"\n                onChange={(e) => { setMsp(e.target.value) }}\n            />\n            {/* {console.log('MSP', msp)} */}\n\n            <div>\n                {/* <lable> Add Bid : </lable> <input type=\"number\" /> */}\n                <div> <button onClick={createAuction}>Create Auction</button></div>\n            </div>\n            {fetchAuctionById}\n\n        </>\n\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}