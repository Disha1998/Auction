{"ast":null,"code":"var _jsxFileName = \"/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, ESCROW_ABI } from './constant';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auction() {\n  _s();\n  const web3ModalRef = useRef();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const getProviderOrSigner = async function () {\n    let needSigner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    // console.log((await userAddress).toLowerCase())\n    const signerForUserAddress = await web3Provider.getSigner();\n    const clientAddress = await signerForUserAddress.getAddress();\n    setClientAddress(clientAddress);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n    if (chainId !== 5) {\n      window.alert(\"Please switch to the Goerli network!\");\n      throw new Error(\"Please switch to the Goerli network\");\n    }\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n    return web3Provider;\n  };\n  const connectWallet = async () => {\n    try {\n      await getProviderOrSigner();\n      setWalletConnected(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Auction, \"ambxN1YtpbM08qszDmsTFvJNt1g=\");\n_c = Auction;\nvar _c;\n$RefreshReg$(_c, \"Auction\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Web3Modal","ethers","Contract","providers","Signer","AUCTION_ESCROW_CONTRACT_ADDRESS","ESCROW_ABI","Auction","web3ModalRef","walletConnected","setWalletConnected","getProviderOrSigner","needSigner","provider","current","connect","web3Provider","Web3Provider","signerForUserAddress","getSigner","clientAddress","getAddress","setClientAddress","chainId","getNetwork","window","alert","Error","signer","connectWallet","error","console","log"],"sources":["/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, ESCROW_ABI } from './constant';\n\n\nexport default function Auction() {\n    const web3ModalRef = useRef();\n\n    const [walletConnected, setWalletConnected] = useState(false);\n    const getProviderOrSigner = async (needSigner = false) => {\n        const provider = await web3ModalRef.current.connect();\n\n        const web3Provider = new providers.Web3Provider(provider);\n        // console.log((await userAddress).toLowerCase())\n        const signerForUserAddress = await web3Provider.getSigner();\n        const clientAddress = await signerForUserAddress.getAddress();\n        setClientAddress(clientAddress);\n        const { chainId } = await web3Provider.getNetwork();\n        if (chainId !== 5) {\n            window.alert(\"Please switch to the Goerli network!\");\n            throw new Error(\"Please switch to the Goerli network\");\n        }\n\n        if (needSigner) {\n            const signer = web3Provider.getSigner();\n            return signer;\n        }\n        return web3Provider;\n    }\n\n\n    const connectWallet = async () => {\n        try {\n            await getProviderOrSigner();\n            setWalletConnected(true);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n    return (\n        <>\n            <div>\n                Auction\n            </div>\n\n        </>\n\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,QAAQ;AAC5D,SAASC,+BAA+B,EAAEC,UAAU,QAAQ,YAAY;AAAC;AAAA;AAGzE,eAAe,SAASC,OAAO,GAAG;EAAA;EAC9B,MAAMC,YAAY,GAAGV,MAAM,EAAE;EAE7B,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,mBAAmB,GAAG,kBAA8B;IAAA,IAAvBC,UAAU,uEAAG,KAAK;IACjD,MAAMC,QAAQ,GAAG,MAAML,YAAY,CAACM,OAAO,CAACC,OAAO,EAAE;IAErD,MAAMC,YAAY,GAAG,IAAIb,SAAS,CAACc,YAAY,CAACJ,QAAQ,CAAC;IACzD;IACA,MAAMK,oBAAoB,GAAG,MAAMF,YAAY,CAACG,SAAS,EAAE;IAC3D,MAAMC,aAAa,GAAG,MAAMF,oBAAoB,CAACG,UAAU,EAAE;IAC7DC,gBAAgB,CAACF,aAAa,CAAC;IAC/B,MAAM;MAAEG;IAAQ,CAAC,GAAG,MAAMP,YAAY,CAACQ,UAAU,EAAE;IACnD,IAAID,OAAO,KAAK,CAAC,EAAE;MACfE,MAAM,CAACC,KAAK,CAAC,sCAAsC,CAAC;MACpD,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IAEA,IAAIf,UAAU,EAAE;MACZ,MAAMgB,MAAM,GAAGZ,YAAY,CAACG,SAAS,EAAE;MACvC,OAAOS,MAAM;IACjB;IACA,OAAOZ,YAAY;EACvB,CAAC;EAGD,MAAMa,aAAa,GAAG,YAAY;IAC9B,IAAI;MACA,MAAMlB,mBAAmB,EAAE;MAC3BD,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAEtB;EACJ,CAAC;EACD,oBACI;IAAA,uBACI;MAAA,UAAK;IAEL;MAAA;MAAA;MAAA;IAAA;EAAM,iBAEP;AAGX;AAAC,GA5CuBvB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}