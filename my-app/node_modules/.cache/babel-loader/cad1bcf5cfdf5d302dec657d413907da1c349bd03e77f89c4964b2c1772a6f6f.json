{"ast":null,"code":"var _jsxFileName = \"/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI } from './constant';\nimport { id } from 'ethers/lib/utils';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auction() {\n  _s();\n  const [title, setTitle] = useState();\n  const [clientAddress, setClientAddress] = useState();\n  const [everyAuction, setEveryAuction] = useState([]);\n  const [StartAuction, setStartAuction] = useState();\n  const [auctionEndTime, setAuctionEndTime] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [msp, setMsp] = useState(0);\n  const [totalNumOfAuctions, setTotalNumOfAuctions] = useState(0);\n  const web3ModalRef = useRef();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const getProviderOrSigner = async function () {\n    let needSigner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new providers.Web3Provider(provider);\n    // console.log((await userAddress).toLowerCase())\n    const signerForUserAddress = await web3Provider.getSigner();\n    const clientAddress = await signerForUserAddress.getAddress();\n    setClientAddress(clientAddress);\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n    if (chainId !== 5) {\n      window.alert(\"Please switch to the Goerli network!\");\n      throw new Error(\"Please switch to the Goerli network\");\n    }\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n    return web3Provider;\n  };\n  // console.log('clientAddress:', clientAddress,); \n  const connectWallet = async () => {\n    try {\n      await getProviderOrSigner();\n      setWalletConnected(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Create Auction --------\n  const createAuction = async () => {\n    // Validate inputs\n    if (clientAddress == null || title == null || msp == null) {\n      alert('Please enter all required fields.');\n      return;\n    }\n    const signer = await getProviderOrSigner(true);\n    const escroContract = getAuctionContractInstance(signer);\n    console.log('clientAddress:', clientAddress);\n    // Send the transaction to create the escrow agreement\n    const tx = await escroContract.createAuctionContract(clientAddress, title, {\n      value: ethers.utils.parseEther(msp)\n    });\n    console.log('tx====', tx);\n    setLoading(true);\n    await tx.wait();\n    // setAuctionId('');\n    setMsp(0);\n    // Update the state to reflect the new escrow agreement\n    // setFundsReleased(false);\n\n    // getNumOfAgreements();\n    setLoading(false);\n    alert('Auction  created successfully.');\n    alert('MSP  deposited successfully.');\n  };\n  const startAuction = async () => {\n    const signer = await getProviderOrSigner(true);\n    const provider = await getProviderOrSigner();\n    const escroContract = getAuctionContractInstance(signer);\n    // Get the current block timestamp\n    const blockTimestamp = await provider.getBlockNumber();\n    // Check if the user is the owner of the auction\n    // const owner = await contract.functions.auctions(auctionId).owner();\n    if (clientAddress !== signer.address) {\n      setError(\"You are not the owner of this auction\");\n      return;\n    }\n    // Check if the auction end time is valid\n    if (auctionEndTime <= blockTimestamp) {\n      setError(\"Invalid end time\");\n      return;\n    }\n    const tx = await escroContract.startAuction(clientAddress, auctionEndTime);\n    setLoading(true);\n    console.log('tx', tx);\n    await tx.wait();\n    // setStartAuction(0)\n    setLoading(false);\n    setAuctionEndTime(\"\");\n    alert('Auction started...!!');\n\n    // let agreement = await escroContract.startAuction();\n    // setStartAuction(agreement.toNumber())\n    // console.log(agreement, 'num of auction');\n  };\n\n  function ParsedAgreement(agreeId, owner, title, msp, starttime, endtime) {\n    this.agreeId = agreeId;\n    this.owner = owner;\n    this.title = title;\n    this.msp = msp;\n    this.starttime = starttime;\n    this.endtime = endtime;\n    // this.release = released\n  }\n\n  useEffect(() => {\n    getTotalNumOfAuction();\n    if (totalNumOfAuctions > 0) {\n      fetchAllAuctions();\n    }\n  }, [totalNumOfAuctions]);\n  useEffect(() => {\n    if (!walletConnected) {\n      web3ModalRef.current = new Web3Modal({\n        network: \"goerli\",\n        providerOptions: {},\n        disableInjectedProvider: false\n      });\n      connectWallet().then(async () => {\n        \"wallet connected\";\n      });\n    }\n  }, []);\n  const fetchAuctionById = async id => {\n    // console.log('erntered fetch by id', id);\n\n    try {\n      const provider = await getProviderOrSigner();\n      const escroContract = getAuctionContractInstance(provider);\n      let auction = await escroContract.auctions(id);\n      console.log(auction);\n      const actn = new ParsedAgreement(id, auction.owner, auction.title, auction.msp.toNumber(), auction.starttime, auction.endtime);\n\n      // console.log(actn, 'agreement by ID');\n      return actn;\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n  const fetchAllAuctions = async () => {\n    try {\n      const allAuctions = [];\n      for (let i = 0; i < totalNumOfAuctions; i++) {\n        const auction = await fetchAuctionById(i);\n        allAuctions.push(auction);\n        //     if (agreement.clientAdd === clientAddress) {\n        //         allClientAgreements.push(agreement);\n\n        //     } else if (agreement.providerAdd === clientAddress) {\n        //         allProviderAgreements.push(agreement)\n        //     } else { }\n\n        //     console.log(agreement.clientAdd, 'agreement');\n        //     // allClientAgreements.push(agreement);\n        // }\n        // console.log(allClientAgreements, 'allClientAgreements')\n        // console.log(allProviderAgreements, 'allProviderAgreements')\n        // setEveryAgreementAsClient(allClientAgreements);\n        // setEveryAgreementAsServiceprovider(allProviderAgreements);\n      }\n\n      setEveryAuction(allAuctions);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log('everyAuction==˝', everyAuction);\n  const getAuctionContractInstance = providerOrSigner => {\n    return new Contract(AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI, providerOrSigner);\n  };\n  const getTotalNumOfAuction = async () => {\n    const provider = await getProviderOrSigner();\n    const escroContract = getAuctionContractInstance(provider);\n    let agreement = await escroContract.numOfAuction();\n    setTotalNumOfAuctions(agreement.toNumber());\n    console.log(agreement, 'num of auction');\n  };\n  console.log(StartAuction, '--StartAuction');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Auction by Di\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Owner : \", clientAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Highest Bid : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \" Title of Auction : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: \" MSP : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => {\n        setMsp(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAuction,\n          children: \"Create Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Created Auctions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), everyAuction && everyAuction.map(evryauction => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"\",\n              marginTop: \"50px\",\n              border: \"1px solid grey\",\n              display: \"inline-block\",\n              padding: \"2% 5%\"\n            },\n            className: \"container offset-2 col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Agreement Id : \", evryauction.agreeId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Owner: \", evryauction.owner]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Start Time:\", evryauction.starttime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"End Time:\", evryauction.endtime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Title : \", evryauction.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"MSP : \", evryauction.msp / 1000000000000000000, \" Ether\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  margin: \"20px\"\n                },\n                onClick: startAuction,\n                children: \"Start Auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Participate in auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n\n//  const [auctionId, setAuctionId] = useState(\"\");\n\n// const startAuction = async () => {\n//     try {\n//         // Connect to the Ethereum network\n//         const provider = new ethers.providers.Web3Provider(window.ethereum);\n//         const signer = provider.getSigner();\n\n//         // Fetch the smart contract instance\n//         const contract = new ethers.Contract(contractAddress, abi, signer);\n\n//         // Get the current block timestamp\n//         const blockTimestamp = await provider.getBlockNumber();\n\n//         // Check if the auction end time is valid\n//         if (auctionEndTime <= blockTimestamp) {\n//             setError(\"Invalid end time\");\n//             return;\n//         }\n\n//         // Check if the user is the owner of the auction\n//         const owner = await contract.functions.auctions(auctionId).owner();\n//         if (owner !== signer.address) {\n//             setError(\"You are not the owner of this auction\");\n//             return;\n//         }\n\n//         // Start the auction\n//         await contract.functions.startAuction(auctionId, auctionEndTime);\n\n//         // Clear the form inputs\n//         setAuctionId(\"\");\n//         setAuctionEndTime(\"\");\n//     } catch (err) {\n//         setError(err.message);\n//     }\n// };\n\n// return (\n//     <div>\n//         <form>\n//             <label htmlFor=\"auctionId\">Auction ID:</label>\n//             <input\n//                 type=\"text\"\n//                 id=\"auctionId\"\n//                 value={auctionId}\n//                 onChange={(e) => setAuctionId(e.target.value)}\n//             />\n\n//             <label htmlFor=\"auctionEndTime\">Auction End Time:</label>\n//             <input\n//                 type=\"text\"\n//                 id=\"auctionEndTime\"\n//                 value={auctionEndTime}\n//                 onChange={(e) => setAuctionEndTime(e.target.value)}\n//             />\n\n//             <button type=\"button\" onClick={startAuction}>\n//                 Start Auction\n//             </button>\n//         </form>\n//     </div>\n// );\n_s(Auction, \"1ZPVZsebHPX4Pv9zufnYai58P3k=\");\n_c = Auction;\nvar _c;\n$RefreshReg$(_c, \"Auction\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Web3Modal","ethers","Contract","providers","Signer","AUCTION_ESCROW_CONTRACT_ADDRESS","AUCTION_ESCROW_ABI","id","Auction","title","setTitle","clientAddress","setClientAddress","everyAuction","setEveryAuction","StartAuction","setStartAuction","auctionEndTime","setAuctionEndTime","error","setError","loading","setLoading","msp","setMsp","totalNumOfAuctions","setTotalNumOfAuctions","web3ModalRef","walletConnected","setWalletConnected","getProviderOrSigner","needSigner","provider","current","connect","web3Provider","Web3Provider","signerForUserAddress","getSigner","getAddress","chainId","getNetwork","window","alert","Error","signer","connectWallet","console","log","createAuction","escroContract","getAuctionContractInstance","tx","createAuctionContract","value","utils","parseEther","wait","startAuction","blockTimestamp","getBlockNumber","address","ParsedAgreement","agreeId","owner","starttime","endtime","getTotalNumOfAuction","fetchAllAuctions","network","providerOptions","disableInjectedProvider","then","fetchAuctionById","auction","auctions","actn","toNumber","allAuctions","i","push","providerOrSigner","agreement","numOfAuction","e","target","map","evryauction","marginLeft","marginTop","border","display","padding","margin"],"sources":["/Users/jaydippatel/Disha CC/Auction_With_Cryptodevtoken/my-app/src/Auction.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport Web3Modal from \"web3modal\";\nimport { ethers, Contract, providers, Signer } from 'ethers';\nimport { AUCTION_ESCROW_CONTRACT_ADDRESS, AUCTION_ESCROW_ABI } from './constant';\nimport { id } from 'ethers/lib/utils';\n\n\nexport default function Auction() {\n\n\n    const [title, setTitle] = useState();\n    const [clientAddress, setClientAddress] = useState();\n    const [everyAuction, setEveryAuction] = useState([]);\n    const [StartAuction, setStartAuction] = useState();\n    const [auctionEndTime, setAuctionEndTime] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n\n    const [loading, setLoading] = useState(false)\n    const [msp, setMsp] = useState(0);\n    const [totalNumOfAuctions, setTotalNumOfAuctions] = useState(0);\n\n\n\n    const web3ModalRef = useRef();\n\n    const [walletConnected, setWalletConnected] = useState(false);\n    const getProviderOrSigner = async (needSigner = false) => {\n        const provider = await web3ModalRef.current.connect();\n\n        const web3Provider = new providers.Web3Provider(provider);\n        // console.log((await userAddress).toLowerCase())\n        const signerForUserAddress = await web3Provider.getSigner();\n        const clientAddress = await signerForUserAddress.getAddress();\n        setClientAddress(clientAddress);\n        const { chainId } = await web3Provider.getNetwork();\n        if (chainId !== 5) {\n            window.alert(\"Please switch to the Goerli network!\");\n            throw new Error(\"Please switch to the Goerli network\");\n        }\n\n        if (needSigner) {\n            const signer = web3Provider.getSigner();\n            return signer;\n        }\n        return web3Provider;\n    }\n    // console.log('clientAddress:', clientAddress,); \n    const connectWallet = async () => {\n        try {\n            await getProviderOrSigner();\n            setWalletConnected(true);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    // Create Auction --------\n    const createAuction = async () => {\n        // Validate inputs\n        if (clientAddress == null || title == null || msp == null) {\n            alert('Please enter all required fields.');\n            return;\n        }\n\n        const signer = await getProviderOrSigner(true);\n\n        const escroContract = getAuctionContractInstance(signer);\n        console.log('clientAddress:', clientAddress);\n        // Send the transaction to create the escrow agreement\n        const tx = await escroContract.createAuctionContract(clientAddress, title, { value: ethers.utils.parseEther(msp) });\n\n        console.log('tx====', tx);\n        setLoading(true)\n        await tx.wait();\n        // setAuctionId('');\n        setMsp(0)\n        // Update the state to reflect the new escrow agreement\n        // setFundsReleased(false);\n\n        // getNumOfAgreements();\n        setLoading(false);\n        alert('Auction  created successfully.');\n        alert('MSP  deposited successfully.');\n    }\n\n    const startAuction = async () => {\n        const signer = await getProviderOrSigner(true);\n\n        const provider = await getProviderOrSigner();\n        const escroContract = getAuctionContractInstance(signer);\n        // Get the current block timestamp\n        const blockTimestamp = await provider.getBlockNumber();\n        // Check if the user is the owner of the auction\n        // const owner = await contract.functions.auctions(auctionId).owner();\n        if (clientAddress !== signer.address) {\n            setError(\"You are not the owner of this auction\");\n            return;\n        }\n        // Check if the auction end time is valid\n        if (auctionEndTime <= blockTimestamp) {\n            setError(\"Invalid end time\");\n            return;\n        }\n\n        const tx = await escroContract.startAuction(clientAddress, auctionEndTime);\n        setLoading(true);\n        console.log('tx', tx);\n\n        await tx.wait();\n        // setStartAuction(0)\n        setLoading(false);\n        setAuctionEndTime(\"\");\n        alert('Auction started...!!')\n\n        // let agreement = await escroContract.startAuction();\n        // setStartAuction(agreement.toNumber())\n        // console.log(agreement, 'num of auction');\n    }\n    function ParsedAgreement(agreeId, owner, title, msp, starttime, endtime) {\n        this.agreeId = agreeId;\n        this.owner = owner;\n        this.title = title;\n        this.msp = msp;\n        this.starttime = starttime;\n        this.endtime = endtime\n        // this.release = released\n    }\n\n    useEffect(() => {\n        getTotalNumOfAuction();\n        if (totalNumOfAuctions > 0) {\n            fetchAllAuctions()\n        }\n    }, [totalNumOfAuctions])\n\n    useEffect(() => {\n\n        if (!walletConnected) {\n            web3ModalRef.current = new Web3Modal({\n                network: \"goerli\",\n                providerOptions: {},\n                disableInjectedProvider: false,\n            });\n            connectWallet().then(async () => {\n                \"wallet connected\"\n            })\n        }\n    }, []);\n\n    const fetchAuctionById = async (id) => {\n        // console.log('erntered fetch by id', id);\n\n        try {\n            const provider = await getProviderOrSigner();\n            const escroContract = getAuctionContractInstance(provider);\n            let auction = await escroContract.auctions(id);\n            console.log(auction)\n            const actn = new ParsedAgreement(id, auction.owner, auction.title,\n                auction.msp.toNumber(), auction.starttime, auction.endtime)\n\n            // console.log(actn, 'agreement by ID');\n            return actn;\n\n        } catch (error) {\n            console.log(error);\n        };\n    }\n\n\n\n    const fetchAllAuctions = async () => {\n\n        try {\n            const allAuctions = [];\n\n            for (let i = 0; i < totalNumOfAuctions; i++) {\n                const auction = await fetchAuctionById(i);\n\n                allAuctions.push(auction);\n                //     if (agreement.clientAdd === clientAddress) {\n                //         allClientAgreements.push(agreement);\n\n                //     } else if (agreement.providerAdd === clientAddress) {\n                //         allProviderAgreements.push(agreement)\n                //     } else { }\n\n                //     console.log(agreement.clientAdd, 'agreement');\n                //     // allClientAgreements.push(agreement);\n                // }\n                // console.log(allClientAgreements, 'allClientAgreements')\n                // console.log(allProviderAgreements, 'allProviderAgreements')\n                // setEveryAgreementAsClient(allClientAgreements);\n                // setEveryAgreementAsServiceprovider(allProviderAgreements);\n            }\n            setEveryAuction(allAuctions);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    console.log('everyAuction==˝', everyAuction);\n\n    const getAuctionContractInstance = (providerOrSigner) => {\n        return new Contract(\n            AUCTION_ESCROW_CONTRACT_ADDRESS,\n            AUCTION_ESCROW_ABI,\n            providerOrSigner\n        );\n    };\n\n    const getTotalNumOfAuction = async () => {\n        const provider = await getProviderOrSigner();\n        const escroContract = getAuctionContractInstance(provider);\n        let agreement = await escroContract.numOfAuction();\n        setTotalNumOfAuctions(agreement.toNumber())\n        console.log(agreement, 'num of auction');\n    }\n\n\n    console.log(StartAuction, '--StartAuction');\n    return (\n        <>\n            <div>\n                <h1>\n                    Auction by Di\n                </h1>\n            </div>\n            <div>Owner : {clientAddress}</div>\n            <div>Highest Bid : </div>\n            {/* 1)Create Auction */}\n            <div>\n                <lable> Title of Auction : </lable> <input type=\"text\"\n                    onChange={(e) => { setTitle(e.target.value) }}\n                />\n                {/* {console.log('title', title)} */}\n            </div>\n            <lable> MSP : </lable> <input type=\"number\"\n                onChange={(e) => { setMsp(e.target.value) }}\n            />\n            {/* {console.log('MSP', msp)} */}\n\n            <div>\n                {/* <lable> Add Bid : </lable> <input type=\"number\" /> */}\n                <div> <button onClick={createAuction}>Create Auction</button></div>\n            </div>\n            <div>\n                <h2>Created Auctions</h2>\n                {\n                    everyAuction && everyAuction.map((evryauction) => {\n                        return (\n                            <>\n                                <div style={{ marginLeft: \"\", marginTop: \"50px\", border: \"1px solid grey\", display: \"inline-block\", padding: \"2% 5%\" }} className='container offset-2 col-5'>\n\n                                    <p>Agreement Id : {evryauction.agreeId}</p>\n                                    <p>Owner: {evryauction.owner}</p>\n                                    <p>Start Time:{evryauction.starttime}</p>\n                                    <p>End Time:{evryauction.endtime}</p>\n                                    {/* <label htmlFor=\"auctionEndTime\">Auction End Time:</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"auctionEndTime\"\n                                        value={auctionEndTime}\n                                        onChange={(e) => setAuctionEndTime(e.target.value)}\n                                    /> */}\n\n\n                                    <h3>Title : {evryauction.title}</h3>\n                                    <h4>MSP : {evryauction.msp / 1000000000000000000} Ether</h4>\n                                    <div >\n                                        <button style={{ margin: \"20px\" }}\n                                            onClick={startAuction}\n                                        >Start Auction</button>\n\n                                        <button>Participate in auction</button>\n\n                                    </div>\n\n                                </div>\n                            </>\n                        )\n                    })\n                }\n            </div>\n            {error && <p>{error}</p>}\n\n        </>\n\n    )\n}\n\n\n\n\n\n//  const [auctionId, setAuctionId] = useState(\"\");\n\n// const startAuction = async () => {\n//     try {\n//         // Connect to the Ethereum network\n//         const provider = new ethers.providers.Web3Provider(window.ethereum);\n//         const signer = provider.getSigner();\n\n//         // Fetch the smart contract instance\n//         const contract = new ethers.Contract(contractAddress, abi, signer);\n\n//         // Get the current block timestamp\n//         const blockTimestamp = await provider.getBlockNumber();\n\n//         // Check if the auction end time is valid\n//         if (auctionEndTime <= blockTimestamp) {\n//             setError(\"Invalid end time\");\n//             return;\n//         }\n\n//         // Check if the user is the owner of the auction\n//         const owner = await contract.functions.auctions(auctionId).owner();\n//         if (owner !== signer.address) {\n//             setError(\"You are not the owner of this auction\");\n//             return;\n//         }\n\n//         // Start the auction\n//         await contract.functions.startAuction(auctionId, auctionEndTime);\n\n//         // Clear the form inputs\n//         setAuctionId(\"\");\n//         setAuctionEndTime(\"\");\n//     } catch (err) {\n//         setError(err.message);\n//     }\n// };\n\n// return (\n//     <div>\n//         <form>\n//             <label htmlFor=\"auctionId\">Auction ID:</label>\n//             <input\n//                 type=\"text\"\n//                 id=\"auctionId\"\n//                 value={auctionId}\n//                 onChange={(e) => setAuctionId(e.target.value)}\n//             />\n\n//             <label htmlFor=\"auctionEndTime\">Auction End Time:</label>\n//             <input\n//                 type=\"text\"\n//                 id=\"auctionEndTime\"\n//                 value={auctionEndTime}\n//                 onChange={(e) => setAuctionEndTime(e.target.value)}\n//             />\n\n//             <button type=\"button\" onClick={startAuction}>\n//                 Start Auction\n//             </button>\n//         </form>\n//     </div>\n// );\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}